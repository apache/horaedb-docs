<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Release on Apache HoraeDB</title><link>https://horaedb.apache.org/cn/tags/release/</link><description>Recent content in Release on Apache HoraeDB</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Wed, 11 Dec 2024 10:34:34 +0800</lastBuildDate><atom:link href="https://horaedb.apache.org/cn/tags/release/index.xml" rel="self" type="application/rss+xml"/><item><title>HoraeDB Python 客户端 2.0.0 版本发布</title><link>https://horaedb.apache.org/cn/blog/2024/release-python-client-2.0.0/</link><pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate><guid>https://horaedb.apache.org/cn/blog/2024/release-python-client-2.0.0/</guid><description>&lt;p>大家好：
Apache HoraeDB（孵化中）社区很高兴地宣布 Python 客户端 v2.0.0 已经发布，这是进入 Apache 孵化器后的第一个版本！具体使用可以参考&lt;a href="https://horaedb.apache.org/cn/docs/user-guide/sdk/python/">文档&lt;/a>，下面是发布日志：&lt;/p>
&lt;h2 id="whats-changed">What&amp;rsquo;s Changed&lt;/h2>
&lt;ul>
&lt;li>fix: wrong timestamp in example by @ShiKaiWi in &lt;a href="https://github.com/apache/horaedb-client-py/pull/35">https://github.com/apache/horaedb-client-py/pull/35&lt;/a>&lt;/li>
&lt;li>chore: rename ceresdb to horaedb by @chunshao90 in &lt;a href="https://github.com/apache/horaedb-client-py/pull/36">https://github.com/apache/horaedb-client-py/pull/36&lt;/a>&lt;/li>
&lt;li>chore: upgrade rust client by @ShiKaiWi in &lt;a href="https://github.com/apache/horaedb-client-py/pull/37">https://github.com/apache/horaedb-client-py/pull/37&lt;/a>&lt;/li>
&lt;li>chore: add asf yaml by @chunshao90 in &lt;a href="https://github.com/apache/horaedb-client-py/pull/38">https://github.com/apache/horaedb-client-py/pull/38&lt;/a>&lt;/li>
&lt;li>chore: add incubating notice by @baojinri in &lt;a href="https://github.com/apache/horaedb-client-py/pull/40">https://github.com/apache/horaedb-client-py/pull/40&lt;/a>&lt;/li>
&lt;li>feat: support basic auth by @jiacai2050 in &lt;a href="https://github.com/apache/horaedb-client-py/pull/41">https://github.com/apache/horaedb-client-py/pull/41&lt;/a>&lt;/li>
&lt;li>docs: update README.md by @baojinri in &lt;a href="https://github.com/apache/horaedb-client-py/pull/43">https://github.com/apache/horaedb-client-py/pull/43&lt;/a>&lt;/li>
&lt;li>chore: fix asf header by @jiacai2050 in &lt;a href="https://github.com/apache/horaedb-client-py/pull/44">https://github.com/apache/horaedb-client-py/pull/44&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="new-contributors">New Contributors&lt;/h2>
&lt;ul>
&lt;li>@chunshao90 made their first contribution in &lt;a href="https://github.com/apache/horaedb-client-py/pull/36">https://github.com/apache/horaedb-client-py/pull/36&lt;/a>&lt;/li>
&lt;li>@baojinri made their first contribution in &lt;a href="https://github.com/apache/horaedb-client-py/pull/40">https://github.com/apache/horaedb-client-py/pull/40&lt;/a>&lt;/li>
&lt;li>@jiacai2050 made their first contribution in &lt;a href="https://github.com/apache/horaedb-client-py/pull/41">https://github.com/apache/horaedb-client-py/pull/41&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Full Changelog&lt;/strong>: &lt;a href="https://github.com/apache/horaedb-client-py/compare/v1.0.0...v2.0.0">https://github.com/apache/horaedb-client-py/compare/v1.0.0...v2.0.0&lt;/a>&lt;/p></description></item><item><title>2.1.0 版本发布</title><link>https://horaedb.apache.org/cn/blog/2024/release-2.1.0/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><guid>https://horaedb.apache.org/cn/blog/2024/release-2.1.0/</guid><description>&lt;p>Apache HoraeDB（孵化中）团队很高兴地宣布，v2.1.0 版本已于 2024-11-18 发布，这个版本解决了 60 多个问题，并且包括两个主要功能：&lt;/p>
&lt;h2 id="1-引入基于本地磁盘的新-wal-实现">1. 引入基于本地磁盘的新 WAL 实现&lt;/h2>
&lt;p>在之前的版本中，有一个基于 RocksDB 的 WAL。虽然它在大多数情况下运行良好，但存在以下问题：&lt;/p>
&lt;ul>
&lt;li>从源代码编译可能是一项具有挑战性的任务，尤其是因为 RocksDB 主要是用 C++ 编写的。&lt;/li>
&lt;li>对于 WAL 而言，RocksDB 可能有些矫枉过正。如果你对 RocksDB 不熟悉，那么对它进行调整可能会非常具有挑战性。&lt;/li>
&lt;/ul>
&lt;p>通过这个新的 WAL，就很好的解决了上面两个问题，而且在性能测试结果，新 WAL 的表现略优于之前的实现，给以后的优化打下了结实的基础。&lt;/p>
&lt;p>&lt;figure>
 &lt;img src="https://horaedb.apache.org/images/local-wal-write.png"
 alt="写入速率对比"
 
 loading="lazy" />

 
 &lt;figcaption>&lt;center>写入速率对比&lt;/center>&lt;/figcaption>
 
&lt;/figure>

&lt;figure>
 &lt;img src="https://horaedb.apache.org/images/local-wal-replay.png"
 alt="回放速率对比"
 
 loading="lazy" />

 
 &lt;figcaption>&lt;center>回放速率对比&lt;/center>&lt;/figcaption>
 
&lt;/figure>
&lt;/p>
&lt;p>感兴趣的朋友可以参考&lt;a href="https://horaedb.apache.org/cn/docs/design/wal_on_disk/">这里的设计文档&lt;/a>了解更多这个特性的细节。&lt;/p>
&lt;h2 id="2-使用-apache-opendal-访问对象存储">2. 使用 Apache OpenDAL 访问对象存储&lt;/h2>
&lt;p>Apache OpenDAL 是一个为访问各种数据存储后端提供统一 API 的项目。以下是一些主要优势：&lt;/p>
&lt;ul>
&lt;li>统一的 API：OpenDAL 为访问 AWS S3、Azure Blob Storage 和本地文件系统等不同存储后端提供了一致、统一的 API。&lt;/li>
&lt;li>优化效率：OpenDAL 在构建时就考虑到了性能。它包括确保高效数据访问和操作的优化功能，使其适用于高性能应用程序。&lt;/li>
&lt;li>全面的文档：该项目提供了详细的文档，使开发人员更容易上手并了解如何有效地使用该库。&lt;/li>
&lt;/ul>
&lt;p>在较新版本的 OpenDAL 中，提供了 &lt;code>object_store&lt;/code> 的&lt;a href="https://github.com/apache/opendal/tree/main/integrations/object_store">集成&lt;/a>，这非常有利于 HoraeDB 的代码迁移，上层使用的 API 几乎没有发生变化，只需要将对象存储抽象为统一的 OpenDAL operator：&lt;/p>
&lt;div class="highlight">&lt;div style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style=";-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#408080;font-style:italic">// Create a new operator
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#408080;font-style:italic">&lt;/span>&lt;span style="color:#008000;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>operator&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>Operator::new(S3::default())&lt;span style="color:#666">?&lt;/span>.finish();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#408080;font-style:italic">// Create a new object store
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#408080;font-style:italic">&lt;/span>&lt;span style="color:#008000;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>object_store&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>Arc::new(OpendalStore::new(operator));&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此外，由于 Apache OpenDAL 实现的 &lt;code>object_store&lt;/code> 是基于最新版本的，相较于 HoraeDB 之前使用的版本，&lt;code>object_store&lt;/code> 接口发生了变化，为了保证本次升级范围尽量可控，我们选择对其进行兼容。&lt;/p></description></item></channel></rss>