<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>运维文档 on Apache HoraeDB</title><link>https://horaedb.apache.org/cn/docs/user-guide/operation/</link><description>Recent content in 运维文档 on Apache HoraeDB</description><generator>Hugo</generator><language>cn</language><atom:link href="https://horaedb.apache.org/cn/docs/user-guide/operation/index.xml" rel="self" type="application/rss+xml"/><item><title>监控</title><link>https://horaedb.apache.org/cn/docs/user-guide/operation/observability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://horaedb.apache.org/cn/docs/user-guide/operation/observability/</guid><description>HoraeDB 支持使用 Prometheus 和 Grafana 做自监控。
Prometheus Prometheus 是非常流行的系统和服务监控系统。
配置 把下面的配置保存到 prometheus.yml 文件中。比如，在 tmp 目录下，文件地址为 /tmp/prometheus.yml。
有两个 HoraeDB http 服务启动在 localhost:5440、localhost:5441。
1 2 3 4 5 6 7 8 global: scrape_interval: 30s scrape_configs: - job_name: horaedb-server static_configs: - targets: [your_ip:5440, your_ip:5441] labels: env: horaedbcluster Prometheus 详细配置见这里。
运行 你可以使用 docker 来运行 Prometheus。Docker 镜像在这里可以找到。
docker run \ -d --name=prometheus \ -p 9090:9090 \ -v /tmp/prometheus.yml:/etc/prometheus/prometheus.yml \ prom/prometheus:v2.41.0 更多 Prometheus 安装方法，参考这里。
Grafana Grafana 是一个非常流行的可观察性和数据可视化平台。</description></item><item><title>系统表</title><link>https://horaedb.apache.org/cn/docs/user-guide/operation/system_table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://horaedb.apache.org/cn/docs/user-guide/operation/system_table/</guid><description>查询 Table 信息 类似于 Mysql&amp;rsquo;s information_schema.tables, HoraeDB 提供 system.public.tables 存储表信息。
system.public.tables 表的列如下 :
timestamp([TimeStamp]) catalog([String]) schema([String]) table_name([String]) table_id([Uint64]) engine([String]) 通过表名查询表信息示例如下：
1 2 3 4 5 curl --location --request POST &amp;#39;http://localhost:5000/sql&amp;#39; \ --header &amp;#39;Content-Type: application/json&amp;#39; \ -d &amp;#39;{ &amp;#34;query&amp;#34;: &amp;#34;select * from system.public.tables where `table_name`=\&amp;#34;my_table\&amp;#34;&amp;#34; }&amp;#39; 返回结果
1 2 3 4 5 6 7 8 9 10 11 { &amp;#34;rows&amp;#34;:[ { &amp;#34;timestamp&amp;#34;:0, &amp;#34;catalog&amp;#34;:&amp;#34;horaedb&amp;#34;, &amp;#34;schema&amp;#34;:&amp;#34;public&amp;#34;, &amp;#34;table_name&amp;#34;:&amp;#34;my_table&amp;#34;, &amp;#34;table_id&amp;#34;:3298534886446, &amp;#34;engine&amp;#34;:&amp;#34;Analytic&amp;#34; } }</description></item><item><title>表操作</title><link>https://horaedb.apache.org/cn/docs/user-guide/operation/table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://horaedb.apache.org/cn/docs/user-guide/operation/table/</guid><description>HoraeDB 支持标准的 SQL，用户可以使用 Http 协议创建表和读写表。更多内容可以参考 SQL 语法
创建表 示例如下
1 2 3 4 5 curl --location --request POST &amp;#39;http://127.0.0.1:5000/sql&amp;#39; \ --header &amp;#39;Content-Type: application/json&amp;#39; \ -d &amp;#39;{ &amp;#34;query&amp;#34;: &amp;#34;CREATE TABLE `demo` (`name` string TAG, `value` double NOT NULL, `t` timestamp NOT NULL, TIMESTAMP KEY(t)) ENGINE=Analytic with (enable_ttl=&amp;#39;\&amp;#39;&amp;#39;false&amp;#39;\&amp;#39;&amp;#39;)&amp;#34; }&amp;#39; 写数据 示例如下
1 2 3 4 5 curl --location --request POST &amp;#39;http://127.0.0.1:5000/sql&amp;#39; \ --header &amp;#39;Content-Type: application/json&amp;#39; \ -d &amp;#39;{ &amp;#34;query&amp;#34;: &amp;#34;INSERT INTO demo(t, name, value) VALUES(1651737067000, &amp;#39;\&amp;#39;&amp;#39;horaedb&amp;#39;\&amp;#39;&amp;#39;, 100)&amp;#34; }&amp;#39; 读数据 示例如下</description></item><item><title>集群运维</title><link>https://horaedb.apache.org/cn/docs/user-guide/operation/horaemeta/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://horaedb.apache.org/cn/docs/user-guide/operation/horaemeta/</guid><description>集群运维接口的使用前提是，HoraeDB 部署为使用 HoraeMeta 的集群模式。
运维接口 注意： 如下接口在实际使用时需要将 127.0.0.1 替换为 HoraeMeta 的真实地址。
查询表元信息 当 tableNames 不为空的时候，使用 tableNames 进行查询。 当 tableNames 为空的时候，使用 ids 进行查询。使用 ids 查询的时候，schemaName 不生效。 curl --location &amp;#39;http://127.0.0.1:8080/api/v1/table/query&amp;#39; \ --header &amp;#39;Content-Type: application/json&amp;#39; \ -d &amp;#39;{ &amp;#34;clusterName&amp;#34;:&amp;#34;defaultCluster&amp;#34;, &amp;#34;schemaName&amp;#34;:&amp;#34;public&amp;#34;, &amp;#34;names&amp;#34;:[&amp;#34;demo1&amp;#34;, &amp;#34;__demo1_0&amp;#34;], }&amp;#39; curl --location &amp;#39;http://127.0.0.1:8080/api/v1/table/query&amp;#39; \ --header &amp;#39;Content-Type: application/json&amp;#39; \ -d &amp;#39;{ &amp;#34;clusterName&amp;#34;:&amp;#34;defaultCluster&amp;#34;, &amp;#34;ids&amp;#34;:[0, 1] }&amp;#39; 查询表的路由信息 curl --location --request POST &amp;#39;http://127.0.0.1:8080/api/v1/route&amp;#39; \ --header &amp;#39;Content-Type: application/json&amp;#39; \ -d &amp;#39;{ &amp;#34;clusterName&amp;#34;:&amp;#34;defaultCluster&amp;#34;, &amp;#34;schemaName&amp;#34;:&amp;#34;public&amp;#34;, &amp;#34;table&amp;#34;:[&amp;#34;demo&amp;#34;] }&amp;#39; 查询节点对应的 Shard 信息 curl --location --request POST &amp;#39;http://127.</description></item><item><title>黑名单</title><link>https://horaedb.apache.org/cn/docs/user-guide/operation/block_list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://horaedb.apache.org/cn/docs/user-guide/operation/block_list/</guid><description>增加黑名单 如果你想限制某个表的查询，可以把表名加到 read_block_list 中。
示例如下：
1 2 3 4 5 6 7 curl --location --request POST &amp;#39;http://localhost:5000/admin/block&amp;#39; \ --header &amp;#39;Content-Type: application/json&amp;#39; \ -d &amp;#39;{ &amp;#34;operation&amp;#34;:&amp;#34;Add&amp;#34;, &amp;#34;write_block_list&amp;#34;:[], &amp;#34;read_block_list&amp;#34;:[&amp;#34;my_table&amp;#34;] }&amp;#39; 返回结果：
1 2 3 4 { &amp;#34;write_block_list&amp;#34;: [], &amp;#34;read_block_list&amp;#34;: [&amp;#34;my_table&amp;#34;] } 设置黑名单 设置黑名单的操作首先会清理已有的列表，然后再把新的表设置进去。
示例如下：
1 2 3 4 5 6 7 curl --location --request POST &amp;#39;http://localhost:5000/admin/block&amp;#39; \ --header &amp;#39;Content-Type: application/json&amp;#39; \ -d &amp;#39;{ &amp;#34;operation&amp;#34;:&amp;#34;Set&amp;#34;, &amp;#34;write_block_list&amp;#34;:[], &amp;#34;read_block_list&amp;#34;:[&amp;#34;my_table1&amp;#34;,&amp;#34;my_table2&amp;#34;] }&amp;#39; 返回结果：
1 2 3 4 { &amp;#34;write_block_list&amp;#34;: [], &amp;#34;read_block_list&amp;#34;: [&amp;#34;my_table1&amp;#34;, &amp;#34;my_table2&amp;#34;] } 删除黑名单 如果你想把表从黑名单中移除，可以使用如下命令：</description></item></channel></rss>