<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ecosystem on Apache HoraeDB</title><link>https://horaedb.apache.org/docs/user-guide/ecosystem/</link><description>Recent content in Ecosystem on Apache HoraeDB</description><generator>Hugo</generator><language>en</language><atom:link href="https://horaedb.apache.org/docs/user-guide/ecosystem/index.xml" rel="self" type="application/rss+xml"/><item><title>InfluxDB</title><link>https://horaedb.apache.org/docs/user-guide/ecosystem/influxdb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://horaedb.apache.org/docs/user-guide/ecosystem/influxdb/</guid><description>InfluxDB is a time series database designed to handle high write and query loads. It is an integral component of the TICK stack. InfluxDB is meant to be used as a backing store for any use case involving large amounts of timestamped data, including DevOps monitoring, application metrics, IoT sensor data, and real-time analytics.
HoraeDB support InfluxDB v1.8 write and query API.
Warn: users need to add following config to server&amp;rsquo;s config in order to try InfluxDB write/query.</description></item><item><title>OpenTSDB</title><link>https://horaedb.apache.org/docs/user-guide/ecosystem/opentsdb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://horaedb.apache.org/docs/user-guide/ecosystem/opentsdb/</guid><description>OpenTSDB is a distributed and scalable time series database based on HBase.
Write HoraeDB follows the OpenTSDB put write protocol.
summary and detailed are not yet supported.
curl --location &amp;#39;http://localhost:5440/opentsdb/api/put&amp;#39; \ --header &amp;#39;Content-Type: application/json&amp;#39; \ -d &amp;#39;[{ &amp;#34;metric&amp;#34;: &amp;#34;sys.cpu.nice&amp;#34;, &amp;#34;timestamp&amp;#34;: 1692588459000, &amp;#34;value&amp;#34;: 18, &amp;#34;tags&amp;#34;: { &amp;#34;host&amp;#34;: &amp;#34;web01&amp;#34;, &amp;#34;dc&amp;#34;: &amp;#34;lga&amp;#34; } }, { &amp;#34;metric&amp;#34;: &amp;#34;sys.cpu.nice&amp;#34;, &amp;#34;timestamp&amp;#34;: 1692588459000, &amp;#34;value&amp;#34;: 18, &amp;#34;tags&amp;#34;: { &amp;#34;host&amp;#34;: &amp;#34;web01&amp;#34; } }]&amp;#39; &amp;#39; Metric will be mapped to table in HoraeDB, and it will be created automatically in first write(Note: The default TTL is 7d, and points written exceed TTL will be discarded directly).</description></item><item><title>Prometheus</title><link>https://horaedb.apache.org/docs/user-guide/ecosystem/prometheus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://horaedb.apache.org/docs/user-guide/ecosystem/prometheus/</guid><description>Prometheus is a popular cloud-native monitoring tool that is widely adopted by organizations due to its scalability, reliability, and scalability. It is used to scrape metrics from cloud-native services, such as Kubernetes and OpenShift, and stores it in a time-series database. Prometheus is also easily extensible, allowing users to extend its features and capabilities with other databases.
HoraeDB can be used as a long-term storage solution for Prometheus. Both remote read and remote write API are supported.</description></item></channel></rss>